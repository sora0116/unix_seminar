= GDBコマンド
GDBコマンドは曖昧性がなければコマンド名の最初の数文字のみで使用できます。また、`ret`(エンター)を入力すると特定のGDBコマンドを繰り返し実行できます。また、TABキーによる補完機能が有効です。

== コマンド構文
GDBコマンドは一行の長さ無制限の入力です。`command [args]` の形をしています。

`run` など一部コマンドを除いて空白行を入力すると直前のコマンドを繰り返します。`list` 及び `x` コマンドでは引数が変わります(???)。

== コマンド設定
多くのコマンドは変数及び設定で動作が変わります。これらの設定は `set` コマンドで変更できます。

gdbinitファイルに書き込むことで初期化時に設定できますし、対話中にコマンドを実行して設定することもできます。

`with`コマンドを使用して、コマンド呼び出しの期間中一時的に設定を変更することもできます。
`
	with <setting> [value] [-- command]
	w <setting> [value] [-- command]
`

== コマンド補完
GDBではTABキーによる補完が有効です。候補が唯一の場合は自動で入力が保管され、複数ある場合は候補が表示されます。TABを二回押して候補を表示する代わりに`esc ?`で表示することもできます。

以下のコマンドで補完候補の最大数を設定できます。デフォルト値は200です。
`
	set max-completions <limit>
`
`limit`には整数値または`unlimited`が指定できます。
`
	show max-completions
`
で現在の設定を確認できます。

== ファイル名引数
ファイル名をコマンドの引数として渡す場合、ファイル名に空白、ダブルクォート、シングルクォートが含まれていない場合は単純な文字列として記述できます。これらが含まれている場合、いくつか方法があります。

- GDBに任せる
- エスケープを使う
- クオートで囲う

== コマンドオプション
一部コマンドは先頭に`-`がついたオプションを受け付けます。コマンド名と同様に、明確な場合は省略形を使うことができます。また、補完も効きます。

一部コマンドの引数にハイフンを含む場合は`--`を使うことでそれ以降の引数をオプションとして解釈しなくなります。

== ヘルプ
`help` コマンドを使用してコマンドのヘルプを閲覧できます。
`
	help, h
`
引数なしのhelpコマンドはコマンドのクラスのリストを表示します。
`
	help <class>
`
ヘルプクラスを指定するとそのクラスの個々のコマンドのリストを表示します。
`
	help <command>
`
コマンドを指定するとそのコマンドの短い使用方法を表示します。
`
	apropos [-v] <regexp>
`
コマンド、エイリアス及びそのドキュメントを検索し、引数で指定した正規表現を検索します。見つかったすべてを表示します。`-v`オプションをつけるとドキュメントの一致部分をハイライトして表示します。
`
	complete <args>
`
コマンドの先頭部分の一致候補を表示します。

`info, show. set`コマンドを使用して、プログラムの状態やGDBの状態を設定および照会することができます。
`
	info, i
`
プログラムの状態を表示します。`help info`でサブコマンドの一覧を閲覧できます。
`
	set
`
式の結果を環境変数に割り当てます。
`
	show
`
GDBの状態を表示します。`set`できるものは大体`show`できます。

`show`にあって`set`できないものを以下に示します。
- `version`
バージョン情報を表示します。
- `copying`
著作権表示を行います。
- `warranty`
保証情報を表示します。
- `configuration`
GDBのビルド情報を表示します。
